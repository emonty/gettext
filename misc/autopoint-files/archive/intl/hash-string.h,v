head	1.1;
branch	1.1.1;
access;
symbols
	gettext-0_11_2:1.1.1.4
	gettext-0_11_1:1.1.1.4
	gettext-0_11:1.1.1.4
	gettext-0_10_40:1.1.1.3
	gettext-0_10_39:1.1.1.2
	gettext-0_10_38:1.1.1.2
	gettext-0_10_37:1.1.1.2
	gettext-0_10_36:1.1.1.2
	gettext-0_10_35:1.1.1.1
	release:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2002.05.01.17.43.22;	author bruno;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.05.01.17.43.22;	author bruno;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.05.01.17.46.37;	author bruno;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.05.01.17.52.40;	author bruno;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.05.01.17.56.22;	author bruno;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Implements a string hashing function.
   Copyright (C) 1995, 1997 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* @@@@ end of prolog @@@@ */

#ifndef PARAMS
# if __STDC__
#  define PARAMS(Args) Args
# else
#  define PARAMS(Args) ()
# endif
#endif

/* We assume to have `unsigned long int' value with at least 32 bits.  */
#define HASHWORDBITS 32


/* Defines the so called `hashpjw' function by P.J. Weinberger
   [see Aho/Sethi/Ullman, COMPILERS: Principles, Techniques and Tools,
   1986, 1987 Bell Telephone Laboratories, Inc.]  */
static unsigned long hash_string PARAMS ((const char *__str_param));

static inline unsigned long
hash_string (str_param)
     const char *str_param;
{
  unsigned long int hval, g;
  const char *str = str_param;

  /* Compute the hash value for the given string.  */
  hval = 0;
  while (*str != '\0')
    {
      hval <<= 4;
      hval += (unsigned long) *str++;
      g = hval & ((unsigned long) 0xf << (HASHWORDBITS - 4));
      if (g != 0)
	{
	  hval ^= g >> (HASHWORDBITS - 8);
	  hval ^= g;
	}
    }
  return hval;
}
@


1.1.1.1
log
@Import gettext-0.10.35
@
text
@@


1.1.1.2
log
@Import gettext-0.10.36
@
text
@d1 2
a2 2
/* Description of GNU message catalog format: string hashing function.
   Copyright (C) 1995, 1997, 1998, 2000, 2001 Free Software Foundation, Inc.
d14 4
a17 3
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d36 1
a36 1
static unsigned long int hash_string PARAMS ((const char *__str_param));
d38 1
a38 1
static inline unsigned long int
d50 2
a51 2
      hval += (unsigned long int) *str++;
      g = hval & ((unsigned long int) 0xf << (HASHWORDBITS - 4));
@


1.1.1.3
log
@Import gettext-0.10.40
@
text
@d4 3
a6 3
   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU Library General Public License as published
   by the Free Software Foundation; either version 2, or (at your option)
d11 2
a12 2
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.
d14 3
a16 4
   You should have received a copy of the GNU Library General Public
   License along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
   USA.  */
@


1.1.1.4
log
@Import gettext-0.11
@
text
@d22 1
a22 1
# if __STDC__ || defined __GNUC__ || defined __SUNPRO_C || defined __cplusplus || __PROTOTYPES
@


