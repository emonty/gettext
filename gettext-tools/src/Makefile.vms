# -*- Makefile -*- for gettext-tools/src on VMS using the MMS utility

#### Start of system configuration section. ####

# Directories used by "make install":
prefix = SYS$DATA:[
exec_prefix = $(prefix)
bindir = $(exec_prefix).bin
libdir = $(exec_prefix).lib
includedir = $(prefix).include
datadir = $(prefix).share
localedir = $(datadir).locale
aliaspath = $(localedir)
jardir = $(datadir).gettext
pkgdatadir = $(datadir).gettext
projectsdir = $(pkgdatadir).projects

# Programs used by "make":

CC = cc

WARN_CFLAGS = /warning

OPTIMFLAGS = /optimize

CFLAGS = $(WARN_CFLAGS) $(OPTIMFLAGS) /define=("VMS=1","HAVE_CONFIG_H=1","LOCALEDIR=""$(localedir)]""","GETTEXTJAR=""$(jardir)]gettext.jar""","LIBDIR=""$(libdir)]""","GETTEXTDATADIR=""$(pkgdatadir)]""","PROJECTSDIR=""$(projectsdir)""")

INCLUDES = /include=([],[-],[-.libuniname],[-.lib],[-.intl],[-.-.gettext-runtime.intl])

LDADD = sys$share:vms_jackets/share
LDADD_EXPAT = sys$library:expat/lib

AR = library
AR_FLAGS = /create

LN = copy
RM = delete

# Programs used by "make install":
INSTALL = copy
INSTALL_PROGRAM = copy
INSTALL_DATA = copy

#### End of system configuration section. ####

PROGRAMS = msgcmp.exe, msgfmt.exe, msgmerge.exe, msgunfmt.exe, xgettext.exe, msgattrib.exe, msgcat.exe, msgcomm.exe, msgconv.exe, msgen.exe, msgexec.exe, msgfilter.exe, msggrep.exe, msginit.exe, msguniq.exe

OBJECTS = \
  message.obj, \
  po.obj, \
  po-lex.obj, \
  po-gram-gen.obj, \
  po-hash-gen.obj, \
  po-charset.obj, \
  open-po.obj, \
  dir-list.obj, \
  str-list.obj, \
  read-po.obj, \
  write-po.obj, \
  msgl-ascii.obj, \
  msgl-iconv.obj, \
  msgl-equal.obj, \
  msgl-cat.obj, \
  msgl-english.obj, \
  file-list.obj, \
  msgl-charset.obj, \
  po-time.obj, \
  plural.obj, \
  plural-table.obj, \
  format.obj, \
  format-c.obj, \
  format-python.obj, \
  format-lisp.obj, \
  format-elisp.obj, \
  format-librep.obj, \
  format-java.obj, \
  format-awk.obj, \
  format-pascal.obj, \
  format-ycp.obj, \
  format-tcl.obj, \
  format-php.obj

msgcmp_OBJECTS = msgcmp.obj
msgfmt_OBJECTS = msgfmt.obj, write-mo.obj, write-java.obj, write-tcl.obj, plural-eval.obj
msgmerge_OBJECTS = msgmerge.obj
msgunfmt_OBJECTS = msgunfmt.obj, read-mo.obj, read-java.obj, read-tcl.obj
xgettext_OBJECTS = xgettext.obj, x-c.obj, x-po.obj, x-python.obj, x-lisp.obj, x-elisp.obj, x-librep.obj, x-smalltalk.obj, x-java.obj, x-awk.obj, x-ycp.obj, x-tcl.obj, x-php.obj, x-rst.obj, x-glade.obj
msgattrib_OBJECTS = msgattrib.obj
msgcat_OBJECTS = msgcat.obj
msgcomm_OBJECTS = msgcomm.obj
msgconv_OBJECTS = msgconv.obj
msgen_OBJECTS = msgen.obj
msgexec_OBJECTS = msgexec.obj
msgfilter_OBJECTS = msgfilter.obj
msggrep_OBJECTS = msggrep.obj
msginit_OBJECTS = msginit.obj, localealias.obj
msguniq_OBJECTS = msguniq.obj

all : gettextsrc.olb,$(PROGRAMS)

# Compilation rules for $(OBJECTS).

message.obj : message.c
	$(CC) $(INCLUDES) $(CFLAGS) message.c

po.obj : po.c
	$(CC) $(INCLUDES) $(CFLAGS) po.c

po-lex.obj : po-lex.c
	$(CC) $(INCLUDES) $(CFLAGS) po-lex.c

po-gram-gen.obj : po-gram-gen.c
	$(CC) $(INCLUDES) $(CFLAGS) po-gram-gen.c

po-hash-gen.obj : po-hash-gen.c
	$(CC) $(INCLUDES) $(CFLAGS) po-hash-gen.c

po-charset.obj : po-charset.c
	$(CC) $(INCLUDES) $(CFLAGS) po-charset.c

open-po.obj : open-po.c
	$(CC) $(INCLUDES) $(CFLAGS) open-po.c

dir-list.obj : dir-list.c
	$(CC) $(INCLUDES) $(CFLAGS) dir-list.c

str-list.obj : str-list.c
	$(CC) $(INCLUDES) $(CFLAGS) str-list.c

read-po.obj : read-po.c
	$(CC) $(INCLUDES) $(CFLAGS) read-po.c

write-po.obj : write-po.c
	$(CC) $(INCLUDES) $(CFLAGS) write-po.c

msgl-ascii.obj : msgl-ascii.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-ascii.c

msgl-iconv.obj : msgl-iconv.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-iconv.c

msgl-equal.obj : msgl-equal.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-equal.c

msgl-cat.obj : msgl-cat.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-cat.c

msgl-english.obj : msgl-english.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-english.c

file-list.obj : file-list.c
	$(CC) $(INCLUDES) $(CFLAGS) file-list.c

msgl-charset.obj : msgl-charset.c
	$(CC) $(INCLUDES) $(CFLAGS) msgl-charset.c

po-time.obj : po-time.c
	$(CC) $(INCLUDES) $(CFLAGS) po-time.c

plural.obj : plural.c
	$(CC) $(INCLUDES) $(CFLAGS) plural.c

plural-table.obj : plural-table.c
	$(CC) $(INCLUDES) $(CFLAGS) plural-table.c

format.obj : format.c
	$(CC) $(INCLUDES) $(CFLAGS) format.c

format-c.obj : format-c.c
	$(CC) $(INCLUDES) $(CFLAGS) format-c.c

format-python.obj : format-python.c
	$(CC) $(INCLUDES) $(CFLAGS) format-python.c

format-lisp.obj : format-lisp.c
	$(CC) $(INCLUDES) $(CFLAGS) format-lisp.c

format-elisp.obj : format-elisp.c
	$(CC) $(INCLUDES) $(CFLAGS) format-elisp.c

format-librep.obj : format-librep.c
	$(CC) $(INCLUDES) $(CFLAGS) format-librep.c

format-java.obj : format-java.c
	$(CC) $(INCLUDES) $(CFLAGS) format-java.c

format-awk.obj : format-awk.c
	$(CC) $(INCLUDES) $(CFLAGS) format-awk.c

format-pascal.obj : format-pascal.c
	$(CC) $(INCLUDES) $(CFLAGS) format-pascal.c

format-ycp.obj : format-ycp.c
	$(CC) $(INCLUDES) $(CFLAGS) format-ycp.c

format-tcl.obj : format-tcl.c
	$(CC) $(INCLUDES) $(CFLAGS) format-tcl.c

format-php.obj : format-php.c
	$(CC) $(INCLUDES) $(CFLAGS) format-php.c

gettextsrc.olb : $(OBJECTS)
	$(RM) gettextsrc.olb
	$(AR) $(AR_FLAGS) gettextsrc.olb $(OBJECTS)

# Compilation rules for $(program_OBJECTS).

msgcmp.obj : msgcmp.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgcmp.c

msgfmt.obj : msgfmt.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgfmt.c

write-mo.obj : write-mo.c
	$(CC) $(INCLUDES) $(CFLAGS) write-mo.c

write-java.obj : write-java.c
	$(CC) $(INCLUDES) $(CFLAGS) write-java.c

write-tcl.obj : write-tcl.c
	$(CC) $(INCLUDES) $(CFLAGS) write-tcl.c

plural-eval.obj : plural-eval.c
	$(CC) $(INCLUDES) $(CFLAGS) plural-eval.c

msgmerge.obj : msgmerge.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgmerge.c

msgunfmt.obj : msgunfmt.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgunfmt.c

read-mo.obj : read-mo.c
	$(CC) $(INCLUDES) $(CFLAGS) read-mo.c

read-java.obj : read-java.c
	$(CC) $(INCLUDES) $(CFLAGS) read-java.c

read-tcl.obj : read-tcl.c
	$(CC) $(INCLUDES) $(CFLAGS) read-tcl.c

xgettext.obj : xgettext.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") xgettext.c

x-c.obj : x-c.c
	$(CC) $(INCLUDES) $(CFLAGS) x-c.c

x-po.obj : x-po.c
	$(CC) $(INCLUDES) $(CFLAGS) x-po.c

x-python.obj : x-python.c
	$(CC) $(INCLUDES) $(CFLAGS) x-python.c

x-lisp.obj : x-lisp.c
	$(CC) $(INCLUDES) $(CFLAGS) x-lisp.c

x-elisp.obj : x-elisp.c
	$(CC) $(INCLUDES) $(CFLAGS) x-elisp.c

x-librep.obj : x-librep.c
	$(CC) $(INCLUDES) $(CFLAGS) x-librep.c

x-smalltalk.obj : x-smalltalk.c
	$(CC) $(INCLUDES) $(CFLAGS) x-smalltalk.c

x-java.obj : x-java.c
	$(CC) $(INCLUDES) $(CFLAGS) x-java.c

x-awk.obj : x-awk.c
	$(CC) $(INCLUDES) $(CFLAGS) x-awk.c

x-ycp.obj : x-ycp.c
	$(CC) $(INCLUDES) $(CFLAGS) x-ycp.c

x-tcl.obj : x-tcl.c
	$(CC) $(INCLUDES) $(CFLAGS) x-tcl.c

x-php.obj : x-php.c
	$(CC) $(INCLUDES) $(CFLAGS) x-php.c

x-rst.obj : x-rst.c
	$(CC) $(INCLUDES) $(CFLAGS) x-rst.c

x-glade.obj : x-glade.c
	$(CC) $(INCLUDES) $(CFLAGS) x-glade.c

msgattrib.obj : msgattrib.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgattrib.c

msgcat.obj : msgcat.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgcat.c

msgcomm.obj : msgcomm.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgcomm.c

msgconv.obj : msgconv.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgconv.c

msgen.obj : msgen.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgen.c

msgexec.obj : msgexec.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgexec.c

msgfilter.obj : msgfilter.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msgfilter.c

msggrep.obj : msggrep.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msggrep.c

msginit.obj : msginit.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msginit.c

localealias.obj : [-.-.gettext-runtime.intl]localealias.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("LOCALE_ALIAS_PATH=""$(aliaspath)]""") [-.-.gettext-runtime.intl]localealias.c

msguniq.obj : msguniq.c
	$(CC) $(INCLUDES) $(CFLAGS) /define=("INSTALLPREFIX=""$(prefix)]""","INSTALLDIR=""$(bindir)]""") msguniq.c

msgcmp.exe : $(msgcmp_OBJECTS)
	link /executable=msgcmp.exe $(msgcmp_OBJECTS) gettextsrc.olb $(LDADD)

msgfmt.exe : $(msgfmt_OBJECTS)
	link /executable=msgfmt.exe $(msgfmt_OBJECTS) gettextsrc.olb $(LDADD)

msgmerge.exe : $(msgmerge_OBJECTS)
	link /executable=msgmerge.exe $(msgmerge_OBJECTS) gettextsrc.olb $(LDADD)

msgunfmt.exe : $(msgunfmt_OBJECTS)
	link /executable=msgunfmt.exe $(msgunfmt_OBJECTS) gettextsrc.olb $(LDADD)

xgettext.exe : $(xgettext_OBJECTS)
	link /executable=xgettext.exe $(xgettext_OBJECTS) [-.libuniname]uniname.olb gettextsrc.olb $(LDADD_EXPAT) $(LDADD)

msgattrib.exe : $(msgattrib_OBJECTS)
	link /executable=msgattrib.exe $(msgattrib_OBJECTS) gettextsrc.olb $(LDADD)

msgcat.exe : $(msgcat_OBJECTS)
	link /executable=msgcat.exe $(msgcat_OBJECTS) gettextsrc.olb $(LDADD)

msgcomm.exe : $(msgcomm_OBJECTS)
	link /executable=msgcomm.exe $(msgcomm_OBJECTS) gettextsrc.olb $(LDADD)

msgconv.exe : $(msgconv_OBJECTS)
	link /executable=msgconv.exe $(msgconv_OBJECTS) gettextsrc.olb $(LDADD)

msgen.exe : $(msgen_OBJECTS)
	link /executable=msgen.exe $(msgen_OBJECTS) gettextsrc.olb $(LDADD)

msgexec.exe : $(msgexec_OBJECTS)
	link /executable=msgexec.exe $(msgexec_OBJECTS) gettextsrc.olb $(LDADD)

msgfilter.exe : $(msgfilter_OBJECTS)
	link /executable=msgfilter.exe $(msgfilter_OBJECTS) gettextsrc.olb $(LDADD)

msggrep.exe : $(msggrep_OBJECTS)
	link /executable=msggrep.exe $(msggrep_OBJECTS) gettextsrc.olb $(LDADD)

msginit.exe : $(msginit_OBJECTS)
	link /executable=msginit.exe $(msginit_OBJECTS) [-.intl]localename.obj gettextsrc.olb $(LDADD)

msguniq.exe : $(msguniq_OBJECTS)
	link /executable=msguniq.exe $(msguniq_OBJECTS) gettextsrc.olb $(LDADD)

install : all,force
	create /directory $(prefix)]
	create /directory $(exec_prefix)]
	$(INSTALL_PROGRAM) msgcmp.exe $(bindir)]msgcmp.exe
	$(INSTALL_PROGRAM) msgfmt.exe $(bindir)]msgfmt.exe
	$(INSTALL_PROGRAM) msgmerge.exe $(bindir)]msgmerge.exe
	$(INSTALL_PROGRAM) msgunfmt.exe $(bindir)]msgunfmt.exe
	$(INSTALL_PROGRAM) xgettext.exe $(bindir)]xgettext.exe
	$(INSTALL_PROGRAM) msgattrib.exe $(bindir)]msgattrib.exe
	$(INSTALL_PROGRAM) msgcat.exe $(bindir)]msgcat.exe
	$(INSTALL_PROGRAM) msgcomm.exe $(bindir)]msgcomm.exe
	$(INSTALL_PROGRAM) msgconv.exe $(bindir)]msgconv.exe
	$(INSTALL_PROGRAM) msgen.exe $(bindir)]msgen.exe
	$(INSTALL_PROGRAM) msgexec.exe $(bindir)]msgexec.exe
	$(INSTALL_PROGRAM) msgfilter.exe $(bindir)]msgfilter.exe
	$(INSTALL_PROGRAM) msggrep.exe $(bindir)]msggrep.exe
	$(INSTALL_PROGRAM) msginit.exe $(bindir)]msginit.exe
	$(INSTALL_PROGRAM) msguniq.exe $(bindir)]msguniq.exe
	create /directory $(datadir)]
	create /directory $(pkgdatadir)]
	$(INSTALL_DATA) msgunfmt.tcl $(pkgdatadir)]msgunfmt.tcl

installdirs : force
	create /directory $(prefix)]
	create /directory $(exec_prefix)]
	create /directory $(datadir)]
	create /directory $(pkgdatadir)]

uninstall : force
	$(RM) $(bindir)]msgcmp.exe
	$(RM) $(bindir)]msgfmt.exe
	$(RM) $(bindir)]msgmerge.exe
	$(RM) $(bindir)]msgunfmt.exe
	$(RM) $(bindir)]xgettext.exe
	$(RM) $(bindir)]msgattrib.exe
	$(RM) $(bindir)]msgcat.exe
	$(RM) $(bindir)]msgcomm.exe
	$(RM) $(bindir)]msgconv.exe
	$(RM) $(bindir)]msgen.exe
	$(RM) $(bindir)]msgexec.exe
	$(RM) $(bindir)]msgfilter.exe
	$(RM) $(bindir)]msggrep.exe
	$(RM) $(bindir)]msginit.exe
	$(RM) $(bindir)]msguniq.exe
	$(RM) $(pkgdatadir)]msgunfmt.tcl

check : all

mostlyclean : clean

clean : force
	$(RM) *.obj
	$(RM) *.olb
	$(RM) $(PROGRAMS)

distclean : clean

maintainer-clean : distclean

force :
