#! /bin/sh

# Test of gettext facilities in the bash language.
# Assumes an fr_FR locale is installed.
# Assumes the following packages are installed: bash 2.0 or newer.

tmpfiles=""
trap 'rm -fr $tmpfiles' 1 2 3 15

tmpfiles="$tmpfiles prog.sh"
cat <<\EOF > prog.sh
#! /bin/bash

n=$1

. gettext.sh

TEXTDOMAIN=prog
export TEXTDOMAIN
TEXTDOMAINDIR=.
export TEXTDOMAINDIR

$echo $"'Your command, please?', asked the waiter."

$echo "`eval_ngettext "a piece of cake" "\\$n pieces of cake" $n`"
EOF

tmpfiles="$tmpfiles prog.pot"
: ${XGETTEXT=xgettext}
${XGETTEXT} -o prog.pot --omit-header --no-location prog.sh

tmpfiles="$tmpfiles prog.ok"
cat <<\EOF > prog.ok
msgid "'Your command, please?', asked the waiter."
msgstr ""

#, sh-format
msgid "a piece of cake"
msgid_plural "$n pieces of cake"
msgstr[0] ""
msgstr[1] ""
EOF

: ${DIFF=diff}
${DIFF} prog.ok prog.pot || exit 1

tmpfiles="$tmpfiles fr.po"
cat <<\EOF > fr.po
msgid ""
msgstr ""
"Content-Type: text/plain; charset=ISO-8859-1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

msgid "'Your command, please?', asked the waiter."
msgstr "«Votre commande, s'il vous plait», dit le garçon."

# Les gateaux allemands sont les meilleurs du monde.
#, sh-format
msgid "a piece of cake"
msgid_plural "$n pieces of cake"
msgstr[0] "un morceau de gateau"
msgstr[1] "$n morceaux de gateau"
EOF

tmpfiles="$tmpfiles fr.po.new"
: ${MSGMERGE=msgmerge}
${MSGMERGE} -q -o fr.po.new fr.po prog.pot

: ${DIFF=diff}
${DIFF} fr.po fr.po.new || exit 1

tmpfiles="$tmpfiles fr"
test -d fr || mkdir fr
test -d fr/LC_MESSAGES || mkdir fr/LC_MESSAGES

: ${MSGFMT=msgfmt}
${MSGFMT} -o fr/LC_MESSAGES/prog.mo fr.po

# Test for presence of bash version 2.0 or newer.
(bash -c :) >/dev/null 2>/dev/null \
  || { rm -fr $tmpfiles; exit 77; }
case `bash -c 'echo $BASH_VERSION'` in
  [2-9].*) ;;
  *) rm -fr $tmpfiles; exit 77;;
esac

tmpfiles="$tmpfiles prog.nok prog.ok prog.out"
# Expected result when bash is built without i18n support.
cat <<\EOF > prog.nok
'Your command, please?', asked the waiter.
2 morceaux de gateau
EOF
# Expected result when bash is built with i18n support.
cat <<\EOF > prog.ok
«Votre commande, s'il vous plait», dit le garçon.
2 morceaux de gateau
EOF

: ${LOCALE_FR=fr_FR}
LANGUAGE= LC_ALL=$LOCALE_FR bash ./prog.sh 2 > prog.out || exit 1
: ${DIFF=diff}
${DIFF} prog.nok prog.out > /dev/null && { rm -fr $tmpfiles; exit 77; }
${DIFF} prog.ok prog.out || exit 1

rm -fr $tmpfiles

exit 0
